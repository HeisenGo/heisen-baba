// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "HeisenGo",
            "url": "https://github.com/HeisenGo"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/vehicles": {
            "get": {
                "description": "Get paginated list of vehicles with filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Capacity",
                        "name": "capacity",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FullVehicleResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Create a new vehicle",
                "parameters": [
                    {
                        "description": "Vehicle to create",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.CreateVehicleReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenter.CreateVehicleResponse"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/owner": {
            "get": {
                "description": "Get vehicles by owner ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicles by owner ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FullVehicleResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/select": {
            "get": {
                "description": "Select vehicles that match the criteria for passengers and cost",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Select vehicles based on criteria",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of passengers",
                        "name": "num_passengers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Maximum cost",
                        "name": "cost",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FullVehicleResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "put": {
                "description": "Update a vehicle by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Update a vehicle by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vehicle to update",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.UpdateVehicleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FullVehicleResponse"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a vehicle by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Delete a vehicle by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/{id}/approve": {
            "post": {
                "description": "Approve a vehicle by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Approve a vehicle by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle approved successfully",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/{id}/status": {
            "patch": {
                "description": "Set the active status of a vehicle by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Set vehicle status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status to set",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.UpdateVehicleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "400": {
                        "description": "error: bad request",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    },
                    "500": {
                        "description": "error: internal server error",
                        "schema": {
                            "$ref": "#/definitions/presenter.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "presenter.CreateVehicleReq": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 25
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_blocked": {
                    "type": "boolean",
                    "example": false
                },
                "is_confirmed_by_admin": {
                    "type": "boolean",
                    "example": true
                },
                "min_required_tech_person": {
                    "type": "integer",
                    "example": 4
                },
                "motornumber": {
                    "type": "string",
                    "example": "aba3b-e3d8-4403-9751-1f04287c9d65"
                },
                "name": {
                    "type": "string",
                    "example": "Volvo RG"
                },
                "owner_id": {
                    "type": "string",
                    "example": "aba3b3ed-e3d8-4403-9751-1f04287c9d65"
                },
                "priceperhour": {
                    "type": "number",
                    "example": 250
                },
                "productionyear": {
                    "type": "integer",
                    "example": 1998
                },
                "speed": {
                    "type": "number",
                    "example": 60
                },
                "type": {
                    "description": "rail, road, air, sailing",
                    "type": "string",
                    "example": "road"
                }
            }
        },
        "presenter.CreateVehicleResponse": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "is_confirmed_by_admin": {
                    "type": "boolean"
                },
                "min_required_tech_person": {
                    "type": "integer"
                },
                "motornumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "priceperhour": {
                    "type": "number"
                },
                "productionyear": {
                    "type": "integer"
                },
                "speed": {
                    "type": "number"
                },
                "type": {
                    "description": "rail, road, air, sailing",
                    "type": "string"
                }
            }
        },
        "presenter.FullVehicleResponse": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 25
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_blocked": {
                    "type": "boolean",
                    "example": false
                },
                "is_confirmed_by_admin": {
                    "type": "boolean",
                    "example": true
                },
                "min_required_tech_person": {
                    "type": "integer",
                    "example": 4
                },
                "motornumber": {
                    "type": "string",
                    "example": "aba3b-e3d8-4403-9751-1f04287c9d65"
                },
                "name": {
                    "type": "string",
                    "example": "Volvo RG"
                },
                "owner_id": {
                    "type": "string",
                    "example": "aba3b3ed-e3d8-4403-9751-1f04287c9d65"
                },
                "priceperhour": {
                    "type": "number",
                    "example": 250
                },
                "productionyear": {
                    "type": "integer",
                    "example": 1998
                },
                "speed": {
                    "type": "number",
                    "example": 60
                },
                "type": {
                    "description": "rail, road, air, sailing",
                    "type": "string",
                    "example": "road"
                }
            }
        },
        "presenter.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "presenter.UpdateVehicleReq": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 25
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_blocked": {
                    "type": "boolean",
                    "example": false
                },
                "is_confirmed_by_admin": {
                    "type": "boolean",
                    "example": true
                },
                "min_required_tech_person": {
                    "type": "integer",
                    "example": 4
                },
                "motornumber": {
                    "type": "string",
                    "example": "aba3b-e3d8-4403-9751-1f04287c9d65"
                },
                "name": {
                    "type": "string",
                    "example": "Volvo RG"
                },
                "owner_id": {
                    "type": "string",
                    "example": "aba3b3ed-e3d8-4403-9751-1f04287c9d65"
                },
                "priceperhour": {
                    "type": "number",
                    "example": 250
                },
                "productionyear": {
                    "type": "integer",
                    "example": 1998
                },
                "speed": {
                    "type": "number",
                    "example": 60
                },
                "type": {
                    "description": "rail, road, air, sailing",
                    "type": "string",
                    "example": "road"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "heisenbaba-VehicleDomain",
	Description:      "Vehicle Registeration & Reservaiton Domain",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
